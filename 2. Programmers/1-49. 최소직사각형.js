function solution(sizes) {
  let long = 0,
    short = 0;
  sizes.forEach((card) => {
    const [w, h] = card;
    if (w > h) {
      long = long > w ? long : w;
      short = short > h ? short : h;
    } else {
      long = long > h ? long : h;
      short = short > w ? short : w;
    }
  });
  return long * short;
}

/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.09ms, 33.6MB)
테스트 2 〉	통과 (0.10ms, 33.6MB)
테스트 3 〉	통과 (0.07ms, 33.5MB)
테스트 4 〉	통과 (0.09ms, 33.6MB)
테스트 5 〉	통과 (0.10ms, 33.6MB)
테스트 6 〉	통과 (0.06ms, 33.7MB)
테스트 7 〉	통과 (0.22ms, 33.6MB)
테스트 8 〉	통과 (0.16ms, 33.6MB)
테스트 9 〉	통과 (0.17ms, 33.7MB)
테스트 10 〉	통과 (0.18ms, 33.6MB)
테스트 11 〉	통과 (0.22ms, 33.7MB)
테스트 12 〉	통과 (0.21ms, 33.7MB)
테스트 13 〉	통과 (0.58ms, 34.1MB)
테스트 14 〉	통과 (0.56ms, 34.2MB)
테스트 15 〉	통과 (1.68ms, 36.6MB)
테스트 16 〉	통과 (2.81ms, 37.1MB)
테스트 17 〉	통과 (2.24ms, 38MB)
테스트 18 〉	통과 (1.92ms, 37.7MB)
테스트 19 〉	통과 (3.83ms, 38MB)
테스트 20 〉	통과 (3.70ms, 37.9MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
*/

// 다른 사람의 풀이
function solution(sizes) {
  const [hor, ver] = sizes.reduce(
    ([h, v], [a, b]) => [
      Math.max(h, Math.max(a, b)),
      Math.max(v, Math.min(a, b)),
    ],
    [0, 0]
  );
  return hor * ver;
}

/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.07ms, 33.8MB)
테스트 2 〉	통과 (0.08ms, 33.6MB)
테스트 3 〉	통과 (0.07ms, 33.7MB)
테스트 4 〉	통과 (0.08ms, 33.6MB)
테스트 5 〉	통과 (0.09ms, 33.6MB)
테스트 6 〉	통과 (0.18ms, 33.7MB)
테스트 7 〉	통과 (0.20ms, 33.7MB)
테스트 8 〉	통과 (0.29ms, 33.5MB)
테스트 9 〉	통과 (0.21ms, 33.7MB)
테스트 10 〉	통과 (0.38ms, 33.7MB)
테스트 11 〉	통과 (0.45ms, 33.7MB)
테스트 12 〉	통과 (0.46ms, 33.8MB)
테스트 13 〉	통과 (0.71ms, 34.2MB)
테스트 14 〉	통과 (1.98ms, 37.3MB)
테스트 15 〉	통과 (4.05ms, 38MB)
테스트 16 〉	통과 (4.43ms, 38.5MB)
테스트 17 〉	통과 (5.09ms, 39.4MB)
테스트 18 〉	통과 (4.89ms, 39.7MB)
테스트 19 〉	통과 (4.76ms, 39.3MB)
테스트 20 〉	통과 (3.83ms, 39.8MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
*/
