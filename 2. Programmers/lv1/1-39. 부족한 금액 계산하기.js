function solution(price, money, count) {
  for (let i = 1; i <= count; i++) {
    money -= price * i;
  }

  return money >= 0 ? 0 : money * -1;
}

/**
정확성  테스트
테스트 1 〉	통과 (0.04ms, 33.5MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.04ms, 33.5MB)
테스트 4 〉	통과 (0.08ms, 33.4MB)
테스트 5 〉	통과 (0.04ms, 33.5MB)
테스트 6 〉	통과 (0.04ms, 33.4MB)
테스트 7 〉	통과 (0.06ms, 33.4MB)
테스트 8 〉	통과 (0.04ms, 33.5MB)
테스트 9 〉	통과 (0.07ms, 33.5MB)
테스트 10 〉	통과 (0.04ms, 33.5MB)
테스트 11 〉	통과 (0.07ms, 33.4MB)
테스트 12 〉	통과 (0.06ms, 33.4MB)
테스트 13 〉	통과 (0.05ms, 33.4MB)
테스트 14 〉	통과 (0.06ms, 33.4MB)
테스트 15 〉	통과 (0.09ms, 33.4MB)
테스트 16 〉	통과 (0.05ms, 33.4MB)
테스트 17 〉	통과 (0.05ms, 33.5MB)
테스트 18 〉	통과 (0.12ms, 33.4MB)
테스트 19 〉	통과 (0.11ms, 33.4MB)
테스트 20 〉	통과 (0.15ms, 33.5MB)
테스트 21 〉	통과 (0.10ms, 33.5MB)
테스트 22 〉	통과 (0.09ms, 33.2MB)
테스트 23 〉	통과 (0.05ms, 33.5MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */

// 가우스 공식을 이용한 풀이(다른 사람의 풀이)
function solution(price, money, count) {
  const tmp = (price * count * (count + 1)) / 2 - money;
  return tmp > 0 ? tmp : 0;
}

/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.03ms, 33.6MB)
테스트 2 〉	통과 (0.03ms, 33.5MB)
테스트 3 〉	통과 (0.03ms, 33.4MB)
테스트 4 〉	통과 (0.03ms, 33.5MB)
테스트 5 〉	통과 (0.03ms, 33.5MB)
테스트 6 〉	통과 (0.03ms, 33.6MB)
테스트 7 〉	통과 (0.03ms, 33.5MB)
테스트 8 〉	통과 (0.03ms, 33.4MB)
테스트 9 〉	통과 (0.03ms, 33.2MB)
테스트 10 〉	통과 (0.03ms, 33.1MB)
테스트 11 〉	통과 (0.03ms, 33.5MB)
테스트 12 〉	통과 (0.03ms, 33.5MB)
테스트 13 〉	통과 (0.03ms, 33.5MB)
테스트 14 〉	통과 (0.03ms, 33.5MB)
테스트 15 〉	통과 (0.03ms, 33.5MB)
테스트 16 〉	통과 (0.04ms, 33.6MB)
테스트 17 〉	통과 (0.04ms, 33.5MB)
테스트 18 〉	통과 (0.03ms, 33.4MB)
테스트 19 〉	통과 (0.03ms, 33.6MB)
테스트 20 〉	통과 (0.03ms, 33.6MB)
테스트 21 〉	통과 (0.03ms, 33.6MB)
테스트 22 〉	통과 (0.03ms, 33.6MB)
테스트 23 〉	통과 (0.03ms, 33.5MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */
