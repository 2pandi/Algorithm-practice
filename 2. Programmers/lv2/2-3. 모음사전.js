/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.08ms, 32.9MB)
테스트 2 〉	통과 (0.34ms, 32.8MB)
테스트 3 〉	통과 (1.21ms, 33.5MB)
테스트 4 〉	통과 (1.46ms, 33.7MB)
테스트 5 〉	통과 (1.04ms, 33.5MB)
테스트 6 〉	통과 (0.29ms, 33MB)
테스트 7 〉	통과 (1.32ms, 33.6MB)
테스트 8 〉	통과 (0.43ms, 33.6MB)
테스트 9 〉	통과 (0.48ms, 33.4MB)
테스트 10 〉	통과 (0.47ms, 33.4MB)
테스트 11 〉	통과 (0.98ms, 33.7MB)
테스트 12 〉	통과 (0.25ms, 33.4MB)
테스트 13 〉	통과 (0.76ms, 33.5MB)
테스트 14 〉	통과 (0.72ms, 33.5MB)
테스트 15 〉	통과 (1.25ms, 33.6MB)
테스트 16 〉	통과 (0.42ms, 33.4MB)
테스트 17 〉	통과 (0.72ms, 33.6MB)
테스트 18 〉	통과 (0.36ms, 33.4MB)
테스트 19 〉	통과 (0.75ms, 33.5MB)
테스트 20 〉	통과 (0.27ms, 33.5MB)
테스트 21 〉	통과 (0.08ms, 33.4MB)
테스트 22 〉	통과 (0.26ms, 33.4MB)
테스트 23 〉	통과 (0.21ms, 33.4MB)
테스트 24 〉	통과 (0.32ms, 33.6MB)
테스트 25 〉	통과 (0.20ms, 33.4MB)
테스트 26 〉	통과 (0.29ms, 33.5MB)
테스트 27 〉	통과 (0.49ms, 33.5MB)
테스트 28 〉	통과 (0.86ms, 33.6MB)
테스트 29 〉	통과 (0.17ms, 33.4MB)
테스트 30 〉	통과 (0.29ms, 33.4MB)
테스트 31 〉	통과 (0.39ms, 33.6MB)
테스트 32 〉	통과 (1.00ms, 33.5MB)
테스트 33 〉	통과 (0.88ms, 33.7MB)
테스트 34 〉	통과 (1.15ms, 33.5MB)
테스트 35 〉	통과 (0.79ms, 33.6MB)
테스트 36 〉	통과 (0.75ms, 33.5MB)
테스트 37 〉	통과 (0.49ms, 33.4MB)
테스트 38 〉	통과 (0.48ms, 33.6MB)
테스트 39 〉	통과 (0.48ms, 33.5MB)
테스트 40 〉	통과 (0.33ms, 33.5MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */

function solution(word) {
  const alpha = {
    0: "A",
    1: "E",
    2: "I",
    3: "O",
    4: "U",
    5: "",
    A: 0,
    E: 1,
    I: 2,
    O: 3,
    U: 4,
  };
  let target = alpha[0];

  for (let i = 1; i > 0; i++) {
    if (word === target) return i;
    else if (target.length < 5) {
      target += "A";
    } else {
      if (target[4] === "U") {
        while (target[target.length - 1] === "U") {
          target = target.slice(0, -1);
        }
      }
      const end = target[target.length - 1];
      target = target.slice(0, -1) + alpha[alpha[end] + 1];
    }
  }
}

/**
 * 1. 자릿수가 5보다 작으면 A를 뒤에 붙인다.
 * 2. 5번째 알파벳이 U이면 끝에있는 U를 모두 지운다
 * 3. 자릿수가 5이면 맨 끝자리를 다음 알파벳으로 바꾼다
 *
 */

// 다른 사람의 풀이1
// ~~ 연산자는 Math.floor와 같은 연산이다.
let solution = (word) =>
  [...word].reduce(
    (a, c, i) => a + "AEIOU".indexOf(c) * ~~(781 / 5 ** i) + 1,
    0
  );

/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.04ms, 33.4MB)
테스트 2 〉	통과 (0.05ms, 33.5MB)
테스트 3 〉	통과 (0.04ms, 33.4MB)
테스트 4 〉	통과 (0.04ms, 33.5MB)
테스트 5 〉	통과 (0.06ms, 33.4MB)
테스트 6 〉	통과 (0.05ms, 33.4MB)
테스트 7 〉	통과 (0.04ms, 33.5MB)
테스트 8 〉	통과 (0.04ms, 33.5MB)
테스트 9 〉	통과 (0.05ms, 33.4MB)
테스트 10 〉	통과 (0.04ms, 33.5MB)
테스트 11 〉	통과 (0.04ms, 33.5MB)
테스트 12 〉	통과 (0.07ms, 33.5MB)
테스트 13 〉	통과 (0.06ms, 33.4MB)
테스트 14 〉	통과 (0.04ms, 33.5MB)
테스트 15 〉	통과 (0.04ms, 33.5MB)
테스트 16 〉	통과 (0.05ms, 33.4MB)
테스트 17 〉	통과 (0.04ms, 33.4MB)
테스트 18 〉	통과 (0.04ms, 33.4MB)
테스트 19 〉	통과 (0.04ms, 33.4MB)
테스트 20 〉	통과 (0.04ms, 33.4MB)
테스트 21 〉	통과 (0.05ms, 33.5MB)
테스트 22 〉	통과 (0.04ms, 33.5MB)
테스트 23 〉	통과 (0.06ms, 33.4MB)
테스트 24 〉	통과 (0.04ms, 33.4MB)
테스트 25 〉	통과 (0.04ms, 33.4MB)
테스트 26 〉	통과 (0.04ms, 33.5MB)
테스트 27 〉	통과 (0.05ms, 33.4MB)
테스트 28 〉	통과 (0.04ms, 33.4MB)
테스트 29 〉	통과 (0.04ms, 33.4MB)
테스트 30 〉	통과 (0.05ms, 33.5MB)
테스트 31 〉	통과 (0.06ms, 33.4MB)
테스트 32 〉	통과 (0.04ms, 33.5MB)
테스트 33 〉	통과 (0.07ms, 33.4MB)
테스트 34 〉	통과 (0.07ms, 33.4MB)
테스트 35 〉	통과 (0.04ms, 33.4MB)
테스트 36 〉	통과 (0.04ms, 33.4MB)
테스트 37 〉	통과 (0.05ms, 33.5MB)
테스트 38 〉	통과 (0.07ms, 33.4MB)
테스트 39 〉	통과 (0.05ms, 33.4MB)
테스트 40 〉	통과 (0.07ms, 33.5MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */

// 다른 사람의 풀이2
function solution(words) {
  return words
    .split("")
    .reduce(
      (r, c, i) =>
        r + [781, 156, 31, 6, 1][i] * ["A", "E", "I", "O", "U"].indexOf(c) + 1,
      0
    );
}

/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.05ms, 33.4MB)
테스트 2 〉	통과 (0.05ms, 33.3MB)
테스트 3 〉	통과 (0.05ms, 33.5MB)
테스트 4 〉	통과 (0.05ms, 33.2MB)
테스트 5 〉	통과 (0.05ms, 33.5MB)
테스트 6 〉	통과 (0.05ms, 33.5MB)
테스트 7 〉	통과 (0.05ms, 33.5MB)
테스트 8 〉	통과 (0.05ms, 33.4MB)
테스트 9 〉	통과 (0.05ms, 33.4MB)
테스트 10 〉	통과 (0.05ms, 33.6MB)
테스트 11 〉	통과 (0.08ms, 33.4MB)
테스트 12 〉	통과 (0.05ms, 33.5MB)
테스트 13 〉	통과 (0.06ms, 33.4MB)
테스트 14 〉	통과 (0.05ms, 33.5MB)
테스트 15 〉	통과 (0.07ms, 33.4MB)
테스트 16 〉	통과 (0.05ms, 33.4MB)
테스트 17 〉	통과 (0.05ms, 33.4MB)
테스트 18 〉	통과 (0.05ms, 33.4MB)
테스트 19 〉	통과 (0.08ms, 33.5MB)
테스트 20 〉	통과 (0.12ms, 33.5MB)
테스트 21 〉	통과 (0.05ms, 33.4MB)
테스트 22 〉	통과 (0.05ms, 33.4MB)
테스트 23 〉	통과 (0.09ms, 33.5MB)
테스트 24 〉	통과 (0.08ms, 33.6MB)
테스트 25 〉	통과 (0.05ms, 33.5MB)
테스트 26 〉	통과 (0.05ms, 33.4MB)
테스트 27 〉	통과 (0.07ms, 33.4MB)
테스트 28 〉	통과 (0.05ms, 33.4MB)
테스트 29 〉	통과 (0.05ms, 33.4MB)
테스트 30 〉	통과 (0.05ms, 33.4MB)
테스트 31 〉	통과 (0.05ms, 33.5MB)
테스트 32 〉	통과 (0.06ms, 33.4MB)
테스트 33 〉	통과 (0.08ms, 33.4MB)
테스트 34 〉	통과 (0.05ms, 33.5MB)
테스트 35 〉	통과 (0.05ms, 33.5MB)
테스트 36 〉	통과 (0.06ms, 33.4MB)
테스트 37 〉	통과 (0.06ms, 33.4MB)
테스트 38 〉	통과 (0.05ms, 33.4MB)
테스트 39 〉	통과 (0.05ms, 33.5MB)
테스트 40 〉	통과 (0.09ms, 33.5MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */
